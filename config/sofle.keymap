/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

/ {
    macros {
        tm: tm {
            label = "TASK_MANAGER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHFT>
                , <&macro_tap &kp ESC>
                , <&macro_release &kp LCTRL &kp LSHFT>
                ;
        };
        slp: slp {
            label = "SLEEP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp S>
                ;
        };
        rst: rst {
            label = "RESTART";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp R>
                ;
        };
        off: off {
            label = "SHUTDOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp U>
                ;
        };
        ubt0: ubt0 {
            label = "USE_BLUE_TOOTH_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 0>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(240,100,20)>;
        };
        ubt1: ubt1 {
            label = "USE_BLUE_TOOTH_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 1>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(120,100,20)>;
        };
        ubt2: ubt2 {
            label = "USE_BLUE_TOOTH_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 2>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(0,100,20)>;
        };
        uc_dash: uc_dash {
        label = "UNICODE_DASH";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <40>;
        tap-ms = <40>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N3>
            , <&macro_release &kp LALT>
            ;       
        }; 
    };
};

/ {
    behaviors {
        cc: cc {
            compatible = "zmk,behavior-tap-dance";
            label = "COLOR_CYCLE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&rgb_ug RGB_COLOR_HSB(0,100,20)>
            , <&rgb_ug RGB_COLOR_HSB(10,100,20)>
            , <&rgb_ug RGB_COLOR_HSB(35,100,20)>
            , <&rgb_ug RGB_COLOR_HSB(120,100,20)>
            , <&rgb_ug RGB_COLOR_HSB(240,100,20)>
            , <&rgb_ug RGB_COLOR_HSB(285,100,20)>
            ;
        };
        td_bt0: td_bt0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 0>, <&ubt0>;
        };
        td_bt1: td_bt1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 1>, <&ubt1>;
        };
        td_bt2: td_bt2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 2>, <&ubt2>;
        };
        clcw: clcw {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_LOCK_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp CLCK>, <&caps_word>;
        };
        lscw: lscw {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        rscw: rscw {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };
        stm: stm {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TASK_MANAGER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&tm>;
        };
        pwr: pwr {
            compatible = "zmk,behavior-tap-dance";
            label = "POWER_COMMANDS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&slp>, <&rst>, <&off>;
        };
        td_btr: td_btr {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_RELEASE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&bt BT_CLR>;
        };
        pscode: pscode {
            compatible = "zmk,behavior-tap-dance";
            label = "POWER_SHELL_CODE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F5>, <&kp F8>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | DEL   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// | CAPS  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp DEL
&kp TAB &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&clcw   &kp A  &kp S    &kp D    &kp F     &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&lscw   &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &none     &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &rscw
               &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp RET    &kp SPACE &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | HUE+ |  =  |   /   |   *  |   -   | EFF+ |
// |BRI+ | PSCR | INS  |   ^   |   @   |   %  |                | HUE- |  7  |   8   |   9  |   +   | BKSP |
// |BRI- | RGB  | <-   |   v   |   ->  |   $  |                | SAT+ |  4  |   5   |   6  |   +   | SPD+ |
// |TASK |BT/USB|      |  PREV |  NEXT |   #  |PL/PS |  |      | SAT- |  1  |   2   |   3  | ENTER | SPD- |
//              |      |       |       |      |      |  |      |  0   |  0  |   0   |   .  |
            bindings = <
&td_btr         &td_bt0         &td_bt1  &td_bt2    &bt BT_SEL 3 &bt BT_SEL 4                       &rgb_ug RGB_HUI &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &rgb_ug RGB_EFF
&rgb_ug RGB_BRI &kp PSCRN       &kp INS  &kp UP     &kp AT       &kp PRCNT                          &rgb_ug RGB_HUD &kp N7       &kp N8        &kp N9          &kp KP_PLUS  &trans
&rgb_ug RGB_BRD &rgb_ug RGB_TOG &kp LEFT &kp DOWN   &kp RIGHT    &kp DLLR                           &rgb_ug RGB_SAI &kp N4       &kp N5        &kp N6          &kp KP_PLUS  &rgb_ug RGB_SPI
&stm            &out OUT_TOG    &trans   &kp C_PREV &kp C_NEXT   &kp HASH  &kp C_PLAY_PAUSE  &trans &rgb_ug RGB_SAD &kp N1       &kp N2        &kp N3          &kp KP_ENTER &rgb_ug RGB_SPD
                                &trans   &trans     &trans       &trans    &trans            &trans &kp N0          &kp N0       &kp N0        &kp DOT 
            >;

            sensor-bindings = <&inc_dec_kp C_FAST_FORWARD C_REWIND &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |    F1 |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |       |  `  |  ~  |  <   |  >   |  ?   |                   |  *   |  {    |  }    | HOME |  END  |       |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  _   |  (    |  )    |  ;   |   |   | COLOR |
// |       |  =  |  -  |  +   |  &   |  |   |  RGB   |  |       |  ^   |  [    |  ]    |  :   |   \   | POWER |
//               |     |      |      |      |  CODE  |  |       |      |       |       |      |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5    &kp F6                              &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&trans    &kp GRAVE &kp TILDE &kp LT      &kp GT    &kp QMARK                           &kp ASTRK &kp LBRC  &kp RBRC  &kp HOME  &kp END   &trans
&uc_dash  &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                           &kp UNDER &kp LPAR  &kp RPAR  &kp SEMI  &kp PIPE  &cc
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp AMPS  &kp PIPE  &rgb_ug RGB_TOG   &trans  &kp CARET &kp LBKT  &kp RBKT  &kp COLON &kp BSLH  &pwr
                    &trans    &trans      &trans    &trans    &pscode           &trans  &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
